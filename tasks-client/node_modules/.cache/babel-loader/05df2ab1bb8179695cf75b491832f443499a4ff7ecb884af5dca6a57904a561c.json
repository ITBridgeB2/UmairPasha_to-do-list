{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin1\\\\Desktop\\\\2nd project node\\\\tasks-client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n\n  // Fetch tasks from the database\n  const fetchTasks = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/tasks');\n      setTasks(response.data);\n    } catch (error) {\n      console.error('Error fetching tasks:', error);\n    }\n  };\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n\n  // Handle adding a new task\n  const handleAddTask = async () => {\n    if (!title.trim()) {\n      alert('Title is required');\n      return;\n    }\n    try {\n      await axios.post('http://localhost:5000/tasks', {\n        title,\n        description\n      });\n      setTitle('');\n      setDescription('');\n      fetchTasks(); // Refresh task list after adding\n    } catch (error) {\n      alert('Error adding task');\n      console.error(error);\n    }\n  };\n\n  // Handle marking task as completed\n  const handleCompleteTask = async id => {\n    try {\n      await axios.put(`http://localhost:5000/tasks/${id}`, {\n        completed: true\n      });\n      fetchTasks(); // Refresh task list after marking as complete\n    } catch (error) {\n      alert('Error marking task as complete');\n      console.error(error);\n    }\n  };\n\n  // Handle deleting a task\n  const handleDeleteTask = async id => {\n    try {\n      await axios.delete(`http://localhost:5000/tasks/${id}`);\n      fetchTasks(); // Refresh task list after deleting\n    } catch (error) {\n      alert('Error deleting task');\n      console.error(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Add Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: title,\n        onChange: e => setTitle(e.target.value),\n        placeholder: \"Task Title\",\n        className: \"input-field\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: description,\n        onChange: e => setDescription(e.target.value),\n        placeholder: \"Task Description\",\n        className: \"input-field\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddTask,\n        className: \"btn\",\n        children: \"Add Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Task List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), tasks.map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: task.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 42\n        }, this), task.description, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 31\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Status: \", task.completed ? '✅ Completed' : '❌ Incomplete']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 83\n        }, this), !task.completed && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleCompleteTask(task.id),\n          className: \"btn complete-btn\",\n          children: \"Mark as Complete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDeleteTask(task.id),\n          className: \"btn delete-btn\",\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this)]\n      }, task.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"jpG6WDcXLRFi9utC4IUzi5M8u7U=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","App","_s","tasks","setTasks","title","setTitle","description","setDescription","fetchTasks","response","get","data","error","console","handleAddTask","trim","alert","post","handleCompleteTask","id","put","completed","handleDeleteTask","delete","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","map","task","_c","$RefreshReg$"],"sources":["C:/Users/Admin1/Desktop/2nd project node/tasks-client/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nexport default function App() {\n  const [tasks, setTasks] = useState([]);\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n\n  // Fetch tasks from the database\n  const fetchTasks = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/tasks');\n      setTasks(response.data);\n    } catch (error) {\n      console.error('Error fetching tasks:', error);\n    }\n  };\n\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n\n  // Handle adding a new task\n  const handleAddTask = async () => {\n    if (!title.trim()) {\n      alert('Title is required');\n      return;\n    }\n\n    try {\n      await axios.post('http://localhost:5000/tasks', { title, description });\n      setTitle('');\n      setDescription('');\n      fetchTasks(); // Refresh task list after adding\n    } catch (error) {\n      alert('Error adding task');\n      console.error(error);\n    }\n  };\n\n  // Handle marking task as completed\n  const handleCompleteTask = async (id) => {\n    try {\n      await axios.put(`http://localhost:5000/tasks/${id}`, { completed: true });\n      fetchTasks(); // Refresh task list after marking as complete\n    } catch (error) {\n      alert('Error marking task as complete');\n      console.error(error);\n    }\n  };\n\n  // Handle deleting a task\n  const handleDeleteTask = async (id) => {\n    try {\n      await axios.delete(`http://localhost:5000/tasks/${id}`);\n      fetchTasks(); // Refresh task list after deleting\n    } catch (error) {\n      alert('Error deleting task');\n      console.error(error);\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"task-form\">\n        <h2>Add Task</h2>\n        <input\n          type=\"text\"\n          value={title}\n          onChange={(e) => setTitle(e.target.value)}\n          placeholder=\"Task Title\"\n          className=\"input-field\"\n        />\n        <textarea\n          value={description}\n          onChange={(e) => setDescription(e.target.value)}\n          placeholder=\"Task Description\"\n          className=\"input-field\"\n        />\n        <button onClick={handleAddTask} className=\"btn\">Add Task</button>\n      </div>\n\n      <div className=\"task-list\">\n        <h2>Task List</h2>\n        {tasks.map((task) => (\n          <div key={task.id} className=\"task-item\">\n            <strong>{task.title}</strong><br />\n            {task.description}<br />\n            <span>Status: {task.completed ? '✅ Completed' : '❌ Incomplete'}</span><br />\n            {!task.completed && (\n              <button\n                onClick={() => handleCompleteTask(task.id)}\n                className=\"btn complete-btn\"\n              >\n                Mark as Complete\n              </button>\n            )}\n            <button\n              onClick={() => handleDeleteTask(task.id)}\n              className=\"btn delete-btn\"\n            >\n              Delete\n            </button>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}